{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"api/","title":"Referencia de la API","text":""},{"location":"api/#test_hatch_maumau.saycow","title":"<code>saycow(text)</code>","text":"<p>Displays a cow-themed ASCII art message using the 'cowsay' library.</p>"},{"location":"api/#test_hatch_maumau.saycow--parameters","title":"Parameters","text":"<p>text (str): The message to be shown in the speech bubble above the cow.</p>"},{"location":"api/#test_hatch_maumau.saycow--returns","title":"Returns","text":"<p>A string of cowsay with the text</p>"},{"location":"api/#test_hatch_maumau.saycow--example","title":"Example","text":"<pre><code>&gt;&gt;&gt; print(saycow(\"Hi, :D\"))\n________\n&lt; Hi :D &gt;\n--------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\n                ||----w |\n                ||     ||\n</code></pre> Source code in <code>src/test_hatch_maumau/script1.py</code> <pre><code>def saycow(text: str):\n    \"\"\"\n    Displays a cow-themed ASCII art message using the 'cowsay' library.\n\n    Parameters\n    ----------\n    text (str): The message to be shown in the speech bubble above the cow.\n\n    Returns\n    -------\n    A string of cowsay with the text\n\n    Example\n    -------\n        &gt;&gt;&gt; print(saycow(\"Hi, :D\"))\n        ________\n        &lt; Hi :D &gt;\n        --------\n                \\   ^__^\n                 \\  (oo)\\_______\n                    (__)\\       )\\/\n                        ||----w |\n                        ||     ||\n    \"\"\"\n    return cowsay.get_output_string(char=\"cow\", text=text)\n</code></pre>"},{"location":"api/#test_hatch_maumau.saystegosaurus","title":"<code>saystegosaurus(text)</code>","text":"<p>Displays a cow-themed ASCII art message using the 'cowsay' library.</p>"},{"location":"api/#test_hatch_maumau.saystegosaurus--parameters","title":"Parameters","text":"<p>text (str): The message to be shown in the speech bubble above the cow.</p>"},{"location":"api/#test_hatch_maumau.saystegosaurus--returns","title":"Returns","text":"<p>A string of cowsay with the text</p>"},{"location":"api/#test_hatch_maumau.saystegosaurus--example","title":"Example","text":"<pre><code>&gt;&gt;&gt; print(saycow(\"Hi, :D\"))\n  ______\n&lt; Hi, :D &gt;\n  ======\n            \\.\n             \\.\n              \\.\n               \\.\n                                  .       .\n                                 / `.   .' \\.\n                         .---.  &lt;    &gt; &lt;    &gt;  .---.\n                         |    \\  \\ - ~ ~ - /  /    |\n             _____        ~-..-~             ~-..-~\n            |     |   \\~~~\\.'                    `./~~~/\n           ---------   \\__/                        \\__/\n          .'  O    \\     /               /       \\  \"\n         (_____,    `._.'               |         }  \\/~~~/\n          `----.          /       }     |        /    \\__/\n                `-.      |       /      |       /      `. ,~~|\n                    ~-.__|      /_ - ~ ^|      /- _      `..-'   f:  f:\n                         |     /        |     /     ~-.     `-. _|| _||_\n                         |_____|        |_____|         ~ - . _ _ _ _ __&gt;\n</code></pre> Source code in <code>src/test_hatch_maumau/script1.py</code> <pre><code>def saystegosaurus(text: str):\n    \"\"\"\n    Displays a cow-themed ASCII art message using the 'cowsay' library.\n\n    Parameters\n    ----------\n    text (str): The message to be shown in the speech bubble above the cow.\n\n    Returns\n    -------\n    A string of cowsay with the text\n\n    Example\n    -------\n        &gt;&gt;&gt; print(saycow(\"Hi, :D\"))\n          ______\n        &lt; Hi, :D &gt;\n          ======\n                    \\.\n                     \\.\n                      \\.\n                       \\.\n                                          .       .\n                                         / `.   .' \\.\n                                 .---.  &lt;    &gt; &lt;    &gt;  .---.\n                                 |    \\  \\ - ~ ~ - /  /    |\n                     _____        ~-..-~             ~-..-~\n                    |     |   \\~~~\\.'                    `./~~~/\n                   ---------   \\__/                        \\__/\n                  .'  O    \\     /               /       \\  \"\n                 (_____,    `._.'               |         }  \\/~~~/\n                  `----.          /       }     |        /    \\__/\n                        `-.      |       /      |       /      `. ,~~|\n                            ~-.__|      /_ - ~ ^|      /- _      `..-'   f:  f:\n                                 |     /        |     /     ~-.     `-. _|| _||_\n                                 |_____|        |_____|         ~ - . _ _ _ _ __&gt;\n    \"\"\"\n    return cowsay.get_output_string(char=\"stegosaurus\", text=text)\n</code></pre>"}]}